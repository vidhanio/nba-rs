use nba::NbaClient;
use once_cell::sync::Lazy;

macro_rules! dirs {
    {$(
        $vis:vis static $name:ident = $($path:tt) / *;
    )+} => {$(
        $vis static $name: ::once_cell::sync::Lazy<::std::path::PathBuf> = ::once_cell::sync::Lazy::new(|| {
            let path = ::std::path::PathBuf::new()
                $(.join(&*$path))*;

            if path.extension().is_none() {
                ::std::fs::create_dir_all(&path)
                    .expect("creating directory should succeed");
            }

            path
        });
    )+};
}

pub const ENDPOINTS: &[&str] = &[
    "2assisttracker",
    "allplayers",
    "allstarballotpredictor",
    "alltimeleadersgrids",
    "assistleaders",
    "assisttracker",
    "assisttrackerstats",
    "boxscoreadvanced",
    "boxscoreadvancedv2",
    "boxscoredefensive",
    "boxscorefourfactors",
    "boxscorefourfactorsv2",
    "boxscorematchups",
    "boxscoremisc",
    "boxscoremiscv2",
    "boxscoreplayertracking",
    "boxscoreplayertrackv2",
    "boxscorescoring",
    "boxscorescoringv2",
    "boxscoresimilarityscore",
    "boxscoresummary",
    "boxscoresummaryv2",
    "boxscoretraditional",
    "boxscoretraditionalv2",
    "boxscoreusage",
    "boxscoreusagev2",
    "commonallplayers",
    "commonplayerinfo",
    "commonplayoffseries",
    "commonteamroster",
    "commonteamyears",
    "cumestatsplayer",
    "cumestatsplayergames",
    "cumestatsteam",
    "cumestatsteamgames",
    "defensehub",
    "dleaguepredictor",
    "draftboard",
    "draftcombinedrillresults",
    "draftcombinenonstationaryshooting",
    "draftcombineplayeranthro",
    "draftcombineplayermeasurements",
    "draftcombinespotshooting",
    "draftcombinestats",
    "drafthistory",
    "fantasywidget",
    "franchisehistory",
    "franchiseleaders",
    "franchiseplayers",
    "gamerotation",
    "glalumboxscoresimilarityscore",
    "gleaguepredictor",
    "homepage",
    "homepageleaders",
    "homepagev2",
    "hustlestatsboxscore",
    "infographicfanduelplayer",
    "leaderstiles",
    "leaguedashlineups",
    "leaguedashoppptshot",
    "leaguedashplayerbiostats",
    "leaguedashplayerclutch",
    "leaguedashplayerptshot",
    "leaguedashplayershotlocations",
    "leaguedashplayerstats",
    "leaguedashptdefend",
    "leaguedashptstats",
    "leaguedashptteamdefend",
    "leaguedashteamclutch",
    "leaguedashteamptshot",
    "leaguedashteamshotlocations",
    "leaguedashteamstats",
    "leaguegamefinder",
    "leaguegamelog",
    "leaguehustlestatsplayer",
    "leaguehustlestatsplayerleaders",
    "leaguehustlestatsteam",
    "leaguehustlestatsteamleaders",
    "leagueleaders",
    "leaguelineupviz",
    "leagueplayerondetails",
    "leagueseasonmatchups",
    "leaguestandings",
    "leaguestandingsv3",
    "lineupstats",
    "matchupsrollup",
    "playbyplay",
    "playbyplaymini",
    "playbyplayv2",
    "playerawards",
    "playerbiostats",
    "playercareerbycollege",
    "playercareerbycollegerollup",
    "playercareerstats",
    "playerclutchstats",
    "playercompare",
    "playercomparestats",
    "playerdashboardbyclutch",
    "playerdashboardbygamesplits",
    "playerdashboardbygeneralsplits",
    "playerdashboardbylastngames",
    "playerdashboardbyopponent",
    "playerdashboardbyshootingsplits",
    "playerdashboardbyteamperformance",
    "playerdashboardbyyearoveryear",
    "playerdashptpass",
    "playerdashptreb",
    "playerdashptreboundlogs",
    "playerdashptshotdefend",
    "playerdashptshotlog",
    "playerdashptshots",
    "playerdefensestats",
    "playerestimatedmetrics",
    "playerfantasyprofile",
    "playerfantasyprofilebargraph",
    "playergamelog",
    "playergamelogs",
    "playergamelogsstats",
    "playergamesplitsstats",
    "playergamestreakfinder",
    "playergeneralsplitsstats",
    "playerinfo",
    "playerlastngamesstats",
    "playernextngames",
    "playerondetails",
    "playeropponentstats",
    "playerpassesstats",
    "playerprofile",
    "playerprofilev2",
    "playerreboundsstats",
    "playerscareerstats",
    "playersclutchstats",
    "playersdefensestats",
    "playersgeneralstats",
    "playershotchartdetail",
    "playershotsstats",
    "playershustleleaders",
    "playershustlestats",
    "playersshotlocationstats",
    "playersshotstats",
    "playerstrackingstats",
    "playersvsplayers",
    "playerteamperformancestats",
    "playertrackbucketsimilarityscore",
    "playertrackranksimilaritycomp",
    "playertracksimilarityscore",
    "playertracksimilarityuniqueness",
    "playervsplayer",
    "playeryearoveryearstats",
    "playoffpicture",
    "playoffseries",
    "scoreboard",
    "scoreboardmini",
    "scoreboardv2",
    "shotchartdetail",
    "shotchartleaguewide",
    "shotchartlineupdetail",
    "synergybucketsimilarityscore",
    "synergyplaytypes",
    "synergysimilarityscore",
    "teamandplayervsplayers",
    "teamandplayersvsplayers",
    "teamclutchstats",
    "teamdashboardbyclutch",
    "teamdashboardbygamesplits",
    "teamdashboardbygeneralsplits",
    "teamdashboardbylastngames",
    "teamdashboardbyopponent",
    "teamdashboardbyshootingsplits",
    "teamdashboardbyteamperformance",
    "teamdashboardbyyearoveryear",
    "teamdashlineups",
    "teamdashptpass",
    "teamdashptreb",
    "teamdashptshots",
    "teamdetails",
    "teamestimatedmetrics",
    "teamfranchiseleaders",
    "teamfranchiseleadersrank",
    "teamgamelog",
    "teamgamelogs",
    "teamgamesplitsstats",
    "teamgamestreakfinder",
    "teamgeneralsplitsstats",
    "teamhistoricalleaders",
    "teaminfo",
    "teaminfocommon",
    "teamlastngamesstats",
    "teamlineupstats",
    "teamopponentstats",
    "teampassesstats",
    "teamperformancestats",
    "teamplayerdashboard",
    "teamplayeronoffdetails",
    "teamplayeronoffsummary",
    "teamplayerstats",
    "teamreboundsstats",
    "teamroster",
    "teamsclutchstats",
    "teamsdefensestats",
    "teamsgeneralstats",
    "teamshootingsplitsstats",
    "teamshotchartlineupdetail",
    "teamshotsstats",
    "teamshustleleaders",
    "teamshustlestats",
    "teamsshotlocationstats",
    "teamsshotstats",
    "teamsyearbyyearstats",
    "teamvsplayer",
    "teamyearbyyearstats",
    "teamyearoveryearstats",
    "teamyears",
    "videodetails",
    "videoevents",
    "videostatus",
    "winprobabilityplaybyplay",
    "winprobabilitypbp",
];

pub const SKIPPED: &[&str] = &[
    "boxscoreadvancedv2",
    "boxscorefourfactorsv2",
    "boxscoremiscv2",
    "boxscorescoringv2",
    "boxscoretraditionalv2",
    "boxscoreusagev2",
    "winprobabilitypbp",
    "alltimeleadersgrids",
    "boxscoresimilarityscore",
    "glalumboxscoresimilarityscore",
    "playerestimatedmetrics",
    "playertrackbucketsimilarityscore",
    "playertrackranksimilaritycomp",
    "playertracksimilarityscore",
    "playertracksimilarityuniqueness",
    "synergybucketsimilarityscore",
    "synergysimilarityscore",
    "teamestimatedmetrics",
];

dirs! {
    pub static ANALYSIS_DIR = "analysis";

    pub static JSON_DIR = ANALYSIS_DIR / "json";

    pub static ANALYSIS_JSON = ANALYSIS_DIR / "analysis.json";
}

pub const HTML_DOCTYPE: &str = "<!DOCTYPE html>";
pub const ERROR_HAS_OCCURED: &str = r#"{"Message":"An error has occurred."}"#;

pub static CLIENT: Lazy<NbaClient> = Lazy::new(NbaClient::new);
